{
	"info": {
		"_postman_id": "e6925212-5411-40df-aeaa-6ff36bb3da62",
		"name": "Petclinic",
		"description": "This is REST API documentation of the Spring Petclinic backend. If authentication is enabled, when calling the APIs use admin/admin\n\nContact Support:\n Name: Bryan Dollery\n Email: bryan.dollery@gmail.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Test Visits",
			"item": [
				{
					"name": "Confirm visits quantity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "95da5340-a34d-4542-96fb-f07fbba76427",
								"exec": [
									"pm.test(\"Expect \" + environment.totalVisits + \" visits\", function () {",
									"    var json = pm.response.json();",
									"    pm.expect(json.length).to.eql(parseInt(environment.totalVisits));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/visits",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"visits"
							]
						}
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add a visit successfully",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c2020c3a-159c-4805-bdb9-e7ed96193053",
								"exec": [
									"pm.test(\"Successfully add visit\", function () {",
									"    pm.response.to.have.status(201); // created",
									"    postman.setEnvironmentVariable(\"totalVisits\", parseInt(environment.totalVisits) + 1);",
									"    postman.setEnvironmentVariable(\"lastVisitAddedId\", pm.response.json().id)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"date\": \"2020/05/12\",\n    \"description\": \"Dog visit\",\n    \"id\": null,\n    \"pet\": {\n        \"id\": 11,\n        \"name\": \"Freddy\",\n        \"birthDate\": \"2000/03/09\",\n        \"type\": {\n            \"id\": 5,\n            \"name\": \"bird\"\n        },\n        \"owner\": {\n            \"id\": 9,\n            \"firstName\": \"David\",\n            \"lastName\": \"Schroeder\",\n            \"address\": \"2749 Blackhawk Trail\",\n            \"city\": \"Madison\",\n            \"telephone\": \"6085559435\"\n        },\n        \"visits\": []\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/visits",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"visits"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fail to add visit",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7463994d-6f57-4d76-96e0-4356e60ef432",
								"exec": [
									"pm.test(\"Fail to add visit\", function () {",
									"    pm.response.to.have.status(400); // don't add",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"date\":\"\",\"description\":\"\",\"id\":null,\"pet\":{\"id\":11,\"name\":\"Freddy\",\"birthDate\":\"2000/03/09\",\"type\":{\"id\":5,\"name\":\"bird\"},\"owner\":{\"id\":9,\"firstName\":\"David\",\"lastName\":\"Schroeder\",\"address\":\"2749 Blackhawk Trail\",\"city\":\"Madison\",\"telephone\":\"6085559435\"},\"visits\":[]}}"
						},
						"url": {
							"raw": "{{baseUrl}}/visits",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"visits"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "invalid date format",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "108f853f-2d3f-4cc6-99a0-ccdad6795352",
								"exec": [
									"pm.test(\"invalid date, fail to add visit\", function () {",
									"    pm.response.to.have.status(400); // malformed request syntax",
									"});",
									"if (pm.response.json()) {",
									"    postman.setEnvironmentVariable(\"totalVisits\", parseInt(environment.totalVisits) + 1);",
									"    postman.setEnvironmentVariable(\"lastVisitAddedId\", pm.response.json().id);",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"date\": \"0099/343/23\",\n    \"description\": \"Test\",\n    \"id\": null,\n    \"pet\": {\n        \"id\": 11,\n        \"name\": \"Freddy\",\n        \"birthDate\": \"2000/03/09\",\n        \"type\": {\n            \"id\": 5,\n            \"name\": \"bird\"\n        },\n        \"owner\": {\n            \"id\": 9,\n            \"firstName\": \"David\",\n            \"lastName\": \"Schroeder\",\n            \"address\": \"2749 Blackhawk Trail\",\n            \"city\": \"Madison\",\n            \"telephone\": \"6085559435\"\n        },\n        \"visits\": []\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/visits",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"visits"
							]
						}
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieve last added visit by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0c8897e6-6164-4437-b6ad-9af28be77bf8",
								"exec": [
									"pm.test(\"Can retrieve by Visit id\", function () {",
									"pm.expect(pm.response.json().id).to.equal(parseInt(environment.lastVisitAddedId));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/visits/:visitId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"visits",
								":visitId"
							],
							"variable": [
								{
									"key": "visitId",
									"value": "{{lastVisitAddedId}}",
									"description": "(Required) visitId"
								}
							]
						}
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits/:visitId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits",
										":visitId"
									],
									"variable": [
										{
											"key": "visitId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits/:visitId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits",
										":visitId"
									],
									"variable": [
										{
											"key": "visitId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits/:visitId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits",
										":visitId"
									],
									"variable": [
										{
											"key": "visitId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits/:visitId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits",
										":visitId"
									],
									"variable": [
										{
											"key": "visitId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fail delete with non existaning visit",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d0e3cfa-e818-4f5a-a0bd-c2eb5202301d",
								"exec": [
									"pm.test(\"Fail to delete non-existant Visit\", function () {",
									"    pm.response.to.have.status(404); // Not found",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/visits/:visitId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"visits",
								":visitId"
							],
							"variable": [
								{
									"key": "visitId",
									"value": "983",
									"description": "(Required) visitId"
								}
							]
						}
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits/:visitId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits",
										":visitId"
									],
									"variable": [
										{
											"key": "visitId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits/:visitId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits",
										":visitId"
									],
									"variable": [
										{
											"key": "visitId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits/:visitId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits",
										":visitId"
									],
									"variable": [
										{
											"key": "visitId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits/:visitId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits",
										":visitId"
									],
									"variable": [
										{
											"key": "visitId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a visit by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2d9cd9a4-e473-4eed-a3e4-fc86dc22e811",
								"exec": [
									"pm.test(\"Delete most recent visit\", function () {",
									"    pm.response.to.have.status(204); // deleted",
									"    postman.setEnvironmentVariable(\"totalVisits\", parseInt(environment.totalVisits) - 1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/visits/:visitId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"visits",
								":visitId"
							],
							"variable": [
								{
									"key": "visitId",
									"value": "{{lastVisitAddedId}}",
									"description": "(Required) visitId"
								}
							]
						}
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits/:visitId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits",
										":visitId"
									],
									"variable": [
										{
											"key": "visitId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits/:visitId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits",
										":visitId"
									],
									"variable": [
										{
											"key": "visitId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits/:visitId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits",
										":visitId"
									],
									"variable": [
										{
											"key": "visitId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/visits/:visitId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"visits",
										":visitId"
									],
									"variable": [
										{
											"key": "visitId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "eb9a313e-b7c7-4d5c-802e-4864f7f8358e",
						"type": "text/javascript",
						"exec": [
							"var url = pm.variables.get('baseUrl') + '/visits';",
							"",
							"pm.sendRequest(url, function (err, res) {",
							"    if (err) {",
							"        console.log(err);",
							"        pm.fail();",
							"    } else {",
							"        var json = res.json();",
							"        postman.setEnvironmentVariable(\"totalVisits\", json.length);",
							"        postman.setEnvironmentVariable(\"lastVisitAddedId\", json[json.length - 1].id);",
							"    }",
							"});"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4316762f-56b4-4896-b34d-52fdd11ca01c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Test Owners",
			"item": [
				{
					"name": "Confirm owner quantity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "07f90c53-ba70-490e-85b8-f12fddba7b0f",
								"exec": [
									"pm.test(\"Expect \" + environment.totalOwners + \" owners\", function () {",
									"    var json = pm.response.json();",
									"    pm.expect(json.length).to.eql(parseInt(environment.totalOwners));",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/owners",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"owners"
							]
						},
						"description": "Given that there are x owners\nWhen I get the full owner list\nThen I expect that list to have x owners in it"
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Successfully add owner",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c9142981-e2d7-445b-9e7a-c452a4f1b04a",
								"exec": [
									"pm.test(\"Successfully add owner\", function () {",
									"    pm.response.to.have.status(201); // created",
									"    postman.setEnvironmentVariable(\"totalOwners\", parseInt(environment.totalOwners) + 1);",
									"    postman.setEnvironmentVariable(\"mostRecentlyAddedId\", pm.response.json().id)",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"firstName\":\"Bryan\",\n\t\"lastName\": \"Dollery\",\n\t\"address\":\"whatever\",\n\t\"telephone\":\"234234\",\n\t\"city\":\"Nairobi\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/owners",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"owners"
							]
						}
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fail to add owner",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bc7de4d1-4ca3-408e-83b8-74e74ae5af6e",
								"exec": [
									"pm.test(\"Fail to add owner\", function () {",
									"    pm.response.to.have.status(400); // malformed request syntax",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"firstName\":\"\",\n\t\"lastName\": \"\",\n\t\"address\":\"\",\n\t\"telephone\":\"\",\n\t\"city\":\"\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/owners",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"owners"
							]
						}
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Can retrieve by lastName",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8ea87ed9-7606-4e82-bb73-8c8f10c673be",
								"exec": [
									"pm.test(\"Can retrieve by lastName\", function () {",
									"    pm.response.json().forEach(owner => {",
									"        pm.expect(owner.lastName).to.eql(\"Dollery\");",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/owners/*/lastname/:lastName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"owners",
								"*",
								"lastname",
								":lastName"
							],
							"variable": [
								{
									"key": "lastName",
									"value": "Dollery",
									"description": "(Required) lastName"
								}
							]
						}
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners/*/lastname/:lastName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners",
										"*",
										"lastname",
										":lastName"
									],
									"variable": [
										{
											"key": "lastName"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners/*/lastname/:lastName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners",
										"*",
										"lastname",
										":lastName"
									],
									"variable": [
										{
											"key": "lastName"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners/*/lastname/:lastName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners",
										"*",
										"lastname",
										":lastName"
									],
									"variable": [
										{
											"key": "lastName"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners/*/lastname/:lastName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners",
										"*",
										"lastname",
										":lastName"
									],
									"variable": [
										{
											"key": "lastName"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update owner's name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eaf385cd-a575-404c-9633-ca091f1ddece",
								"exec": [
									"pm.test(\"Update owner's name\", function () {",
									"    pm.response.to.have.status(204); // No content",
									"    var url = pm.variables.get('baseUrl') + '/owners';",
									"    ",
									"    pm.sendRequest(url, function (err, res) {",
									"        if (err) {",
									"            console.log(err);",
									"            pm.fail();",
									"        } else {",
									"            var json = res.json();",
									"            var firstName = json[json.length - 1].firstName;",
									"            pm.expect(firstName).to.eql('wibble');",
									"        }",
									"    });",
									"    ",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"wibble\",\n    \"lastName\": \"Dollery\",\n    \"address\": \"wherever\",\n    \"city\": \"Nobody cares\",\n    \"telephone\": \"3132\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/owners/:ownerId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"owners",
								":ownerId"
							],
							"variable": [
								{
									"key": "ownerId",
									"value": "{{mostRecentlyAddedId}}",
									"description": "(Required) ownerId"
								}
							]
						}
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners/:ownerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners",
										":ownerId"
									],
									"variable": [
										{
											"key": "ownerId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners/:ownerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners",
										":ownerId"
									],
									"variable": [
										{
											"key": "ownerId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners/:ownerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners",
										":ownerId"
									],
									"variable": [
										{
											"key": "ownerId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners/:ownerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners",
										":ownerId"
									],
									"variable": [
										{
											"key": "ownerId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/owners/:ownerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"owners",
										":ownerId"
									],
									"variable": [
										{
											"key": "ownerId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete most recent owner",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1ff4af1c-2819-4838-b673-8f3106a8d0e2",
								"exec": [
									"pm.test(\"Delete most recent owner\", function () {",
									"    pm.response.to.have.status(204); // deleted",
									"    postman.setEnvironmentVariable(\"totalOwners\", parseInt(environment.totalOwners) - 1);",
									"    ",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/owners/:ownerId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"owners",
								":ownerId"
							],
							"variable": [
								{
									"key": "ownerId",
									"value": "{{mostRecentlyAddedId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Failt to delete non-existant owner",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9fda17fe-5d90-49e8-bc67-888441ab6857",
								"exec": [
									"pm.test(\"Fail to delete non-existant owner\", function () {",
									"    pm.response.to.have.status(404); // Not found",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/owners/:ownerId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"owners",
								":ownerId"
							],
							"variable": [
								{
									"key": "ownerId",
									"value": "11111"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "As an employee\nI want to add, remove, and update owners\nSo than I can maintain our customer list",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "03c045c3-b8b7-47b0-b7a4-bef6433f9cfe",
						"type": "text/javascript",
						"exec": [
							"var url = pm.variables.get('baseUrl') + '/owners';",
							"    ",
							"pm.sendRequest(url, function (err, res) {",
							"    if (err) {",
							"        console.log(err);",
							"        pm.fail();",
							"    } else {",
							"        var json = res.json();",
							"    postman.setEnvironmentVariable(\"totalOwners\", json.length);",
							"    postman.setEnvironmentVariable(\"mostRecentlyAddedId\", json[json.length - 1].id);",
							"    }",
							"});",
							"",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ab9fef09-005a-441e-b34c-3f803e9fafa3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Test Vets",
			"item": [
				{
					"name": "Confirm All Vets Quantity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0fffe39c-2208-490f-8edf-173205dee9e0",
								"exec": [
									"pm.test(\"Expect \" + environment.totalVets + \" vets\", function () {",
									"    var json = pm.response.json();",
									"    pm.expect(json.length).to.eql(parseInt(environment.totalVets));",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/vets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vets"
							]
						}
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add a Valid New Vet",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee5bbde2-4128-49a7-a634-5c69fab530fc",
								"exec": [
									"pm.test(\"Add a Valid New Vet\", function () {",
									"    pm.response.to.have.status(201); // created",
									"    postman.setEnvironmentVariable(\"totalVets\", parseInt(environment.totalVets) + 1);",
									"    postman.setEnvironmentVariable(\"latestAddedVetId\", pm.response.json().id)",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Json Foo\",\n    \"lastName\": \"Json Bar\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/vets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vets"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add a New Vet as Blank",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3cf5762-a068-451e-9bbd-bd5503cd36a5",
								"exec": [
									"pm.test(\"Add a New Vet as Blank, Expect Error 400\", function () {",
									"    pm.response.to.have.status(400); // malformed request syntax",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"\",\n    \"lastName\": \"\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/vets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vets"
							]
						}
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add a New Vet as SQL Injection",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f4a9c4fe-d827-4e38-b7a1-337a83f6f31c",
								"exec": [
									"pm.test(\"Add a New Vet as SQL Injection, Expect Error 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"if (pm.response.json()) {",
									"    postman.setEnvironmentVariable(\"totalVets\", parseInt(environment.totalVets) + 1);",
									"    postman.setEnvironmentVariable(\"latestAddedVetId\", pm.response.json().id);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"SELECT * FROM\",\n    \"lastName\": \"veterinarian\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/vets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vets"
							]
						}
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add a New Vet as Numbers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b64ee8ff-38a5-44b4-aa97-37ba1d7d0af5",
								"exec": [
									"pm.test(\"Add a New Vet as Numbers , Expect Error 400\", function () {",
									"    pm.response.to.have.status(400); // malformed request syntax",
									"});",
									"if (pm.response.json()) {",
									"    postman.setEnvironmentVariable(\"totalVets\", parseInt(environment.totalVets) + 1);",
									"    postman.setEnvironmentVariable(\"latestAddedVetId\", pm.response.json().id);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": 1121123,\n\t\"lastName\": 12314134\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/vets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vets"
							]
						}
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add a New Vet as Symbols",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "665f1796-b1dd-4cef-8583-3976a6c9dd30",
								"exec": [
									"pm.test(\"Add a New Vet as Symbols , Expect Error 400\", function () {",
									"    pm.response.to.have.status(400); // malformed request syntax",
									"});",
									"if (pm.response.json()) {",
									"    postman.setEnvironmentVariable(\"totalVets\", parseInt(environment.totalVets) + 1);",
									"    postman.setEnvironmentVariable(\"latestAddedVetId\", pm.response.json().id);",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"^%&*()_+-=-:\",\n\t\"lastName\": \"?///<><>>><@@#\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/vets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vets"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add a New Vet as Spaces",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5acc09e7-de73-4375-9d8a-f0c7b8b7c0f9",
								"exec": [
									"pm.test(\"Add a New Vet as Spaces , Expect Error 400\", function () {",
									"    pm.response.to.have.status(400); // malformed request syntax",
									"});",
									"if (pm.response.json()) {",
									"    postman.setEnvironmentVariable(\"totalVets\", parseInt(environment.totalVets) + 1);",
									"    postman.setEnvironmentVariable(\"latestAddedVetId\", pm.response.json().id);",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \" \",\n\t\"lastName\": \" \"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/vets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vets"
							]
						}
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add a New Vet with made up specialities",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2c2eb09b-4be6-4181-afe6-37467838af51",
								"exec": [
									"pm.test(\"Add a New Vet with made up specialities , Expect Error 400\", function () {",
									"    pm.response.to.have.status(400); // malformed request syntax",
									"});",
									"if (pm.response.json()) {",
									"    postman.setEnvironmentVariable(\"totalVets\", parseInt(environment.totalVets) + 1);",
									"    postman.setEnvironmentVariable(\"latestAddedVetId\", pm.response.json().id);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \" \",\n\t\"lastName\": \" \",\n\t\"specialties\": \n\t[\n\t\t{\n      \"id\": 1,\n      \"name\": \"Eating\"\n      \n        },\n        {\n      \"id\": 2,\n      \"name\": \"Sleeping\"\n        }\n\t]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/vets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vets"
							]
						}
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a Vet by latestAddedVetId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d59f6f0-baa0-470b-80e8-8830413d0a6f",
								"exec": [
									"pm.test(\"Get a Vet by latestAddedVetId\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(parseInt(environment.latestAddedVetId));",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/vets/:vetId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vets",
								":vetId"
							],
							"variable": [
								{
									"key": "vetId",
									"value": "{{latestAddedVetId}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a Vet non Existing Vet",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c6379dc0-8fbe-48a7-87e5-ad41c657a02e",
								"exec": [
									"pm.test(\"Get a Non existing vet id , Expect Error 404\", function () {",
									"    pm.response.to.have.status(404); // malformed request syntax",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/vets/:vetId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vets",
								":vetId"
							],
							"variable": [
								{
									"key": "vetId",
									"value": "99999"
								}
							]
						}
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Latest Added Vet Valid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f63aa23d-d49c-4c10-8335-cbaf9af722fd",
								"exec": [
									"pm.test(\"Successfully Updated Latest Added Vet First and Last Name\", function () {",
									"    pm.response.to.have.status(204); // No content",
									"    var url = pm.variables.get('baseUrl') + '/vets';",
									"",
									"    pm.sendRequest(url, function (err, res) {",
									"        if (err) {",
									"            console.log(err);",
									"            pm.fail();",
									"        } else {",
									"            var json = res.json();",
									"            var firstName = json[json.length - 1].firstName;",
									"            pm.expect(firstName).to.eql('Edited Json Foo');",
									"            var lastName = json[json.length - 1].lastName;",
									"            pm.expect(lastName).to.eql('Edited Json Bar');",
									"        }",
									"    });",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Edited Json Foo\",\n    \"lastName\": \"Edited Json Bar\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/vets/:vetId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vets",
								":vetId"
							],
							"variable": [
								{
									"description": "(Required) vetId",
									"key": "vetId",
									"value": "{{latestAddedVetId}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Latest Added Vet to Blank",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d24a2c5e-7a5d-40d3-afda-3bf4d9dc9cda",
								"exec": [
									"pm.test(\"Update Latest Added Vet to Blank, Expect Error 400\", function () {",
									"    pm.response.to.have.status(400); // malformed request syntax",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"\",\n    \"lastName\": \"\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/vets/:vetId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vets",
								":vetId"
							],
							"variable": [
								{
									"description": "(Required) vetId",
									"key": "vetId",
									"value": "{{latestAddedVetId}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Latest Added Vet to be numbers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5352cb24-16b3-4964-af86-070b940e3423",
								"exec": [
									"pm.test(\"Update Latest Added Vet to be numbers, Expect Error 400\", function () {",
									"    pm.response.to.have.status(400); // malformed request syntax",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": 2312341235,\n    \"lastName\": 231532251215\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/vets/:vetId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vets",
								":vetId"
							],
							"variable": [
								{
									"description": "(Required) vetId",
									"key": "vetId",
									"value": "{{latestAddedVetId}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Latest Added Vet to be Symbols",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "62e11c44-c362-4736-b537-d98315a8007f",
								"exec": [
									"pm.test(\"Update Latest Added Vet to be Symbols, Expect Error 400\", function () {",
									"    pm.response.to.have.status(400); // malformed request syntax",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"%$#^&*()_+\",\n    \"lastName\": \"@@@#$%$^<>?/\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/vets/:vetId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vets",
								":vetId"
							],
							"variable": [
								{
									"description": "(Required) vetId",
									"key": "vetId",
									"value": "{{latestAddedVetId}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Latest Added Vet to have 4 specialities",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "889b0aea-5bbf-45f5-a2ac-971a3b0fd02f",
								"exec": [
									"pm.test(\"Update Latest Added Vet to have 4 specialities, Expect Error 400\", function () {",
									"    pm.response.to.have.status(400); // malformed request syntax",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"madeup\",\n\t\"lastName\": \"madeup\",\n\t\"specialties\": \n\t[\n\t\t{\n      \"id\": 1,\n      \"name\": \"Eating\"\n      \n        },\n        {\n      \"id\": 2,\n      \"name\": \"Sleeping\"\n        },\n        {\n      \"id\": 3,\n      \"name\": \"dying\"\n        },\n        {\n      \"id\": 4,\n      \"name\": \"flying\"\n        }\n\t]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/vets/:vetId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vets",
								":vetId"
							],
							"variable": [
								{
									"description": "(Required) vetId",
									"key": "vetId",
									"value": "{{latestAddedVetId}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Latest Added Vet to have duplicate specialities",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7f59a1f6-d1df-4a1d-8f99-a4814fca5095",
								"exec": [
									"pm.test(\"Update Latest Added Vet to have duplicate specialities, Expect Error 400\", function () {",
									"    pm.response.to.have.status(400); // malformed request syntax",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"madeup\",\n\t\"lastName\": \"madeup\",\n\t\"specialties\": \n\t[\n\t\t{\n      \"id\": 1,\n      \"name\": \"Eating\"\n      \n        },\n        {\n      \"id\": 2,\n      \"name\": \"Sleeping\"\n        },\n        {\n      \"id\": 2,\n      \"name\": \"Sleeping\"\n        }\n\t]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/vets/:vetId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vets",
								":vetId"
							],
							"variable": [
								{
									"description": "(Required) vetId",
									"key": "vetId",
									"value": "{{latestAddedVetId}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Latest Added Vet By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f1aab7f-c721-4e3a-b7e8-f931a2dac54e",
								"exec": [
									"pm.test(\"Successfully Deletec Latest Added Vet By Id\", function () {",
									"    pm.response.to.have.status(204); // deleted",
									"    postman.setEnvironmentVariable(\"totalVets\", parseInt(environment.totalVets) - 1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/vets/:vetId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vets",
								":vetId"
							],
							"variable": [
								{
									"description": "(Required) vetId",
									"key": "vetId",
									"value": "{{latestAddedVetId}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete non Existing vet",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "32d68392-ebe8-43bb-b2e3-6dcc7cd72998",
								"exec": [
									"pm.test(\"Delete non Existing vet, Expect Error 404\", function () {",
									"    pm.response.to.have.status(404); // Not found",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/vets/:vetId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vets",
								":vetId"
							],
							"variable": [
								{
									"description": "(Required) vetId",
									"key": "vetId",
									"value": "9999"
								}
							]
						}
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vets/:vetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vets",
										":vetId"
									],
									"variable": [
										{
											"key": "vetId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "As an employee\nI want to add, remove, and update Vets\nSo than I can maintain our Vets list",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b5981e03-177d-43e1-9d45-6b1fe5582d9a",
						"type": "text/javascript",
						"exec": [
							"var url = pm.variables.get('baseUrl') + '/vets';",
							"",
							"pm.sendRequest(url, function (err, res) {",
							"    if (err) {",
							"        console.log(err);",
							"        pm.fail();",
							"    } else {",
							"        var json = res.json();",
							"        postman.setEnvironmentVariable(\"totalVets\", json.length);",
							"        postman.setEnvironmentVariable(\"latestAddedVetId\", json[json.length - 1].id);",
							"    }",
							"});",
							"",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1b66abb0-56ac-4916-b8c3-e8fd7cb43abe",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Test Pets",
			"item": [
				{
					"name": "Confirm pet quantity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "90a6e5eb-729e-4ae6-b5c3-a013790c28da",
								"exec": [
									"",
									"",
									"pm.test(\"Expect \" + environment.totalPets + \" pet\", function () {",
									"    pm.response.to.have.status(200);",
									"",
									"    var json = pm.response.json();",
									"    pm.expect(json.length).to.eql(parseInt(environment.totalPets));",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets"
							]
						},
						"description": "Confirm that the number of pets returned by the get request equal what's in the environment variable totalPets"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Successfully add pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b305126c-c31a-4b4a-acbf-d03da79da4c7",
								"exec": [
									"pm.test(\"Successfully add pet\", function () {",
									"    pm.response.to.have.status(201); // created",
									"    postman.setEnvironmentVariable(\"totalPets\", parseInt(environment.totalPets) + 1);",
									"    postman.setEnvironmentVariable(\"mostRecentlyAddedPetId\", pm.response.json().id);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"id\":null,\r\n   \"owner\":{\r\n      \"id\":1,\r\n      \"firstName\":\"George\",\r\n      \"lastName\":\"Franklin\",\r\n      \"address\":\"110 W. Liberty St.\",\r\n      \"city\":\"Madison\",\r\n      \"telephone\":\"6085551023\"\r\n   },\r\n   \"name\":\"AddedThroughPostman\",\r\n   \"birthDate\":\"2018/05/12\",\r\n   \"type\":{\r\n      \"id\":3,\r\n      \"name\":\"lizard\"\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/pets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets"
							]
						},
						"description": "Add a new pet with the name \"AddedThroughPostman\" to the owner with id number 1"
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fail to add pet with empty name field",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3388377b-9749-49f1-acd3-3f5ac3f629b1",
								"exec": [
									"pm.test(\"Fail to add pet with empty name field\", function () {",
									"    pm.response.to.have.status(400); // not created",
									"});",
									"if (pm.response.json()) {",
									"    postman.setEnvironmentVariable(\"totalPets\", parseInt(environment.totalPets) + 1);",
									"    postman.setEnvironmentVariable(\"mostRecentlyAddedPetId\", pm.response.json().id);",
									"}",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"id\":null,\r\n   \"owner\":{\r\n      \"id\":1,\r\n      \"firstName\":\"George\",\r\n      \"lastName\":\"Franklin\",\r\n      \"address\":\"110 W. Liberty St.\",\r\n      \"city\":\"Madison\",\r\n      \"telephone\":\"6085551023\"\r\n   },\r\n   \"name\":\"\",\r\n   \"birthDate\":\"2018/05/12\",\r\n   \"type\":{\r\n      \"id\":3,\r\n      \"name\":\"lizard\"\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/pets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets"
							]
						},
						"description": "Try to add pet with an empty name field"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fail to add pet with future birth date",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c6d197d8-4299-48f6-9fad-5a331e964f43",
								"exec": [
									"pm.test(\"Fail to add pet with future birth date\", function () {",
									"    pm.response.to.have.status(400); // not created",
									"});",
									"if (pm.response.json()) {",
									"    postman.setEnvironmentVariable(\"totalPets\", parseInt(environment.totalPets) + 1);",
									"    postman.setEnvironmentVariable(\"mostRecentlyAddedPetId\", pm.response.json().id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"id\":null,\r\n   \"owner\":{\r\n      \"id\":1,\r\n      \"firstName\":\"George\",\r\n      \"lastName\":\"Franklin\",\r\n      \"address\":\"110 W. Liberty St.\",\r\n      \"city\":\"Madison\",\r\n      \"telephone\":\"6085551023\"\r\n   },\r\n   \"name\":\"AddedThroughPostman\",\r\n   \"birthDate\":\"2030/05/12\",\r\n   \"type\":{\r\n      \"id\":3,\r\n      \"name\":\"lizard\"\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/pets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets"
							]
						},
						"description": "Try to add pet with future birth date"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fail to add pet with symbols and numbers in the name field",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d18cec39-1ccf-4eba-b0ed-8c46a76550cd",
								"exec": [
									"pm.test(\"Fail to add pet with symbols and numbers in the name field\", function () {",
									"    pm.response.to.have.status(400); // not created",
									"",
									"});",
									"if (pm.response.json()) {",
									"    postman.setEnvironmentVariable(\"totalPets\", parseInt(environment.totalPets) + 1);",
									"    postman.setEnvironmentVariable(\"mostRecentlyAddedPetId\", pm.response.json().id);",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"id\":null,\r\n   \"owner\":{\r\n      \"id\":1,\r\n      \"firstName\":\"George\",\r\n      \"lastName\":\"Franklin\",\r\n      \"address\":\"110 W. Liberty St.\",\r\n      \"city\":\"Madison\",\r\n      \"telephone\":\"6085551023\"\r\n   },\r\n   \"name\":\"%$%544\",\r\n   \"birthDate\":\"2018/05/12\",\r\n   \"type\":{\r\n      \"id\":3,\r\n      \"name\":\"lizard\"\r\n   }\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/pets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets"
							]
						},
						"description": "Try to add pet with an empty name field"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Can retrieve by petId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a8a76bdc-7213-4963-9400-2870c3766c8a",
								"exec": [
									"",
									"pm.test(\"Can retrieve by petId\", function () {",
									"",
									"    pm.response.to.have.status(200);",
									"",
									"    var pet = pm.response.json();",
									"",
									"    pm.expect(pet.id).to.eql(parseInt(environment.mostRecentlyAddedPetId));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pets/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "{{mostRecentlyAddedPetId}}",
									"description": "(Required) petId"
								}
							]
						},
						"description": "Retrieve the most Recently Added Pet"
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fail to retrieve non-existant pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bf661adf-bd1f-421b-ac0c-47c26c9292de",
								"exec": [
									"pm.test(\"Fail to retrieve non-existant pet\", function () {",
									"    pm.response.to.have.status(404); // Not found",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pets/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "999999",
									"description": "(Required) petId"
								}
							]
						},
						"description": "Try to retrieve a pet with non-existent id number"
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update pet's information",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c13569ce-1f42-4ced-a4b8-5254b2743bff",
								"exec": [
									"pm.test(\"Update pet's information\", function () {",
									"    pm.response.to.have.status(204); // No content",
									"    var url = pm.variables.get('baseUrl') + '/pets';",
									"",
									"    pm.sendRequest(url, function (err, res) {",
									"        if (err) {",
									"            console.log(err);",
									"            pm.fail();",
									"        } else {",
									"            var json = res.json();",
									"            var name = json[json.length - 1].name;",
									"            pm.expect(name).to.eql('UpdatedThroughPostman');",
									"        }",
									"    });",
									"",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"id\":{{mostRecentlyAddedPetId}},\n   \"owner\":{\n      \"id\":1,\n      \"firstName\":\"George\",\n      \"lastName\":\"Franklin\",\n      \"address\":\"110 W. Liberty St.\",\n      \"city\":\"Madison\",\n      \"telephone\":\"6085551023\"\n   },\n   \"name\":\"UpdatedThroughPostman\",\n   \"birthDate\":\"2019/05/12\",\n   \"type\":{\n      \"id\":5,\n      \"name\":\"bird\"\n   }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/pets/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "{{mostRecentlyAddedPetId}}",
									"description": "(Required) petId"
								}
							]
						},
						"description": "Update the most Recently Added Pet to:\r\n\r\nname: UpdatedThroughPostman\r\n\r\nbirthDate: 2019/05/12\r\n\r\ntype: bird"
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fail to update pet's information with invalid data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e91ce6c8-121b-47e4-a33c-228ee39e8a66",
								"exec": [
									"pm.test(\"Fail to update pet's information with invalid data\", function () {",
									"    pm.response.to.have.status(400); // not created",
									"",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"id\":{{mostRecentlyAddedPetId}},\n   \"owner\":{\n      \"id\":1,\n      \"firstName\":\"George\",\n      \"lastName\":\"Franklin\",\n      \"address\":\"110 W. Liberty St.\",\n      \"city\":\"Madison\",\n      \"telephone\":\"6085551023\"\n   },\n   \"name\":\"2%$63\",\n   \"birthDate\":\"2025/07/01\",\n   \"type\":{\n      \"id\":5,\n      \"name\":\"bird\"\n   }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/pets/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "{{mostRecentlyAddedPetId}}",
									"description": "(Required) petId"
								}
							]
						},
						"description": "Update the most Recently Added Pet to:\r\n\r\nname: 2%$63\r\n\r\nbirthDate: 2025/07/01\r\n\r\ntype: bird"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete most recent pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b97b0aab-e692-44af-a3cd-c810e55ada7f",
								"exec": [
									"pm.test(\"Delete most recent pet\", function () {",
									"    ",
									"    var oldTotalPets = parseInt(environment.totalPets);",
									"    ",
									"    pm.response.to.have.status(204); // deleted",
									"    ",
									"    postman.setEnvironmentVariable(\"totalPets\", oldTotalPets - 1);",
									"    ",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pets/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "{{mostRecentlyAddedPetId}}",
									"description": "(Required) petId"
								}
							]
						},
						"description": "Delete the most Recently Added Pet"
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fail to delete non-existant pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f8526796-4bef-4c65-aa54-2c0fac37f937",
								"exec": [
									"pm.test(\"Fail to delete non-existant pet\", function () {",
									"    pm.response.to.have.status(404); // Not found",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pets/:petId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pets",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "999999",
									"description": "(Required) petId"
								}
							]
						},
						"description": "Try to delete a pet with non-existent id number"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pets/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pets",
										":petId"
									],
									"variable": [
										{
											"key": "petId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "As an employee\nI want to add, remove, and update pets\nSo than I can maintain our customer list of pets",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c1b12fc3-8076-473b-99d0-288ed698a88d",
						"type": "text/javascript",
						"exec": [
							"var url = pm.variables.get('baseUrl') + '/pets';",
							"    ",
							"pm.sendRequest(url, function (err, res) {",
							"    if (err) {",
							"        console.log(err);",
							"        pm.fail();",
							"    } else {",
							"        var json = res.json();",
							"    postman.setEnvironmentVariable(\"totalPets\", json.length);",
							"    postman.setEnvironmentVariable(\"mostRecentlyAddedPetId\", json[json.length - 1].id);",
							"    }",
							"});"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "774f27cb-132b-4a56-ab35-67f5656f4ca3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Test specialties",
			"item": [
				{
					"name": "{specialty Id}",
					"item": [
						{
							"name": "Can retreive by speciality Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f16a2759-1681-42a7-8160-e8d9c1f17cd0",
										"exec": [
											"pm.test(\"Can retrieve by id\", function () {",
											"   var speciality = pm.response.json();",
											"   for (var i in speciality) {",
											"      //pm.response.json().forEach(speciality => {",
											"      pm.expect(speciality.name).to.eql(environment[\"specialtyName\"]);",
											"      //});",
											"   }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties/{{specialtyId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties",
										"{{specialtyId}}"
									]
								}
							},
							"response": [
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/specialties/:specialtyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"specialties",
												":specialtyId"
											],
											"variable": [
												{
													"key": "specialtyId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/specialties/:specialtyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"specialties",
												":specialtyId"
											],
											"variable": [
												{
													"key": "specialtyId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/specialties/:specialtyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"specialties",
												":specialtyId"
											],
											"variable": [
												{
													"key": "specialtyId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/specialties/:specialtyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"specialties",
												":specialtyId"
											],
											"variable": [
												{
													"key": "specialtyId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Failed to update speciality name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4725b8ac-acd5-489f-9ac9-dcd9845a82f7",
										"exec": [
											"pm.test(\"Update speciality's with symbol and number name\", function () {",
											"    pm.response.to.have.status(400); // Bad request",
											"    ",
											"    ",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \n    \"name\": \"1223#\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/specialties/{{specialtyId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties",
										"{{specialtyId}}"
									]
								}
							},
							"response": [
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/specialties/:specialtyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"specialties",
												":specialtyId"
											],
											"variable": [
												{
													"key": "specialtyId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/specialties/:specialtyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"specialties",
												":specialtyId"
											],
											"variable": [
												{
													"key": "specialtyId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/specialties/:specialtyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"specialties",
												":specialtyId"
											],
											"variable": [
												{
													"key": "specialtyId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/specialties/:specialtyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"specialties",
												":specialtyId"
											],
											"variable": [
												{
													"key": "specialtyId"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/specialties/:specialtyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"specialties",
												":specialtyId"
											],
											"variable": [
												{
													"key": "specialtyId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Successfully delete most recent speciality",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1898c1d4-eb56-4fd5-810e-48f73be22549",
										"exec": [
											"pm.test(\"Delete most recent speciality\", function () {",
											"    pm.response.to.have.status(204); // deleted",
											"    postman.setEnvironmentVariable(\"totalSpecialties\", parseInt(environment.totalSpecialties) - 1);",
											"    ",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties/{{specialtyId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties",
										"{{specialtyId}}"
									]
								}
							},
							"response": [
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/specialties/:specialtyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"specialties",
												":specialtyId"
											],
											"variable": [
												{
													"key": "specialtyId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/specialties/:specialtyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"specialties",
												":specialtyId"
											],
											"variable": [
												{
													"key": "specialtyId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/specialties/:specialtyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"specialties",
												":specialtyId"
											],
											"variable": [
												{
													"key": "specialtyId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "No Content",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/specialties/:specialtyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"specialties",
												":specialtyId"
											],
											"variable": [
												{
													"key": "specialtyId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Faild to delete non-existant speciality Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "14fc2214-a6fb-4960-bc65-1eb54a23964e",
										"exec": [
											"pm.test(\"Fail to update non-existant speciality\", function () {",
											"    pm.response.to.have.status(404); // Not found",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \n    \"name\": \"to be faild\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/specialties/:nonExistSpecialityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties",
										":nonExistSpecialityId"
									],
									"variable": [
										{
											"key": "nonExistSpecialityId",
											"value": "11111"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Faild to update speciality with empty name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0e8fdcd6-5703-46cb-8d4e-caf4a519c19a",
										"exec": [
											"pm.test(\"Fail to update speciality with empty name\", function () {",
											"    pm.response.to.have.status(400); // Not found",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \n    \"name\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/specialties/{{specialtyId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties",
										"{{specialtyId}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Confirm speciality quantity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a9bd5e52-1f15-481a-b1a8-c3596e5bc9f4",
								"exec": [
									"pm.test(\"Expect \" + environment.totalSpecialties + \" specialties\", function () {",
									"    var json = pm.response.json();",
									"    pm.expect(json.length).to.eql(parseInt(environment.totalSpecialties));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/specialties",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"specialties"
							]
						},
						"description": "Given that there are x specialities\nWhen I get the full specialities list\nThen I expect that list to have x specialities in it"
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Faild to add speciality with symbols and numbers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1cf88d4b-d7d6-4618-90d2-230c83a01eaf",
								"exec": [
									"pm.test(\"Faild to add speciality with a name of symbols and number\", function () {",
									"    pm.response.to.have.status(400);",
									"",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"112##\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/specialties",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"specialties"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/specialties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"specialties"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Faild to delete non-existant speciality",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bf095c0d-44ad-4a5f-948f-c7f155788850",
								"exec": [
									"pm.test(\"Fail to delete non-existant speciality\", function () {",
									"    pm.response.to.have.status(404); // Not found",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/specialties/:nonExistSpecialityId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"specialties",
								":nonExistSpecialityId"
							],
							"variable": [
								{
									"key": "nonExistSpecialityId",
									"value": "11111"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Faild to add speciality with empty name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bf26c80d-b721-437e-acd8-33d2af87519e",
								"exec": [
									"pm.test(\"Fail to add speciality with empty name\", function () {",
									"    pm.response.to.have.status(400); // Not found",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/specialties",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"specialties"
							]
						}
					},
					"response": []
				},
				{
					"name": "Faild to add duplicate speciality ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0ae13c4c-0dda-49bc-b975-74a1dacd8d11",
								"exec": [
									"pm.test(\"Fail to add duplicate speciality\", function () {",
									"    pm.response.to.have.status(400); // Not found",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\"name\":\"{{specialtyName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/specialties",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"specialties"
							]
						}
					},
					"response": []
				}
			],
			"description": "As an employee\nI want to add, remove, and update specialities\nSo than I can maintain our specialities list",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "17c90656-208c-4203-a359-c9a51b8398de",
						"type": "text/javascript",
						"exec": [
							"var url = pm.variables.get('baseUrl') + '/specialties';",
							"    ",
							"pm.sendRequest(url, function (err, res) {",
							"    if (err) {",
							"        console.log(err);",
							"        pm.fail();",
							"    } else {",
							"        var json = res.json();",
							"    postman.setEnvironmentVariable(\"totalSpecialties\", json.length);",
							"   postman.setEnvironmentVariable(\"specialtyId\", json[json.length - 1].id);",
							"      postman.setEnvironmentVariable(\"specialtyName\", json[json.length - 1].name);",
							"      ",
							"",
							"    }",
							"});"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "39d0f3dd-d7f8-4fcd-bebf-3d9316209a39",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Test PetTypes",
			"item": [
				{
					"name": "Confirm PetType Quantity",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a5d745a4-1c08-4f78-9fb0-e299b260dcb1",
								"exec": [
									"pm.test(\"Expect \" + environment.totalPetTypes + \" petType\", function () {",
									"    var json = pm.response.json();",
									"    pm.expect(json.length).to.eql(parseInt(environment.totalPetTypes));",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pettypes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pettypes"
							]
						},
						"description": "  Given that there are 12 pettypes\r\n  When I get the full pettypes list\r\n  Then I expect that list to have 12 pettypes in it"
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Successfully add PetType",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "75b31678-4bf4-4758-becf-2bf267b2d5a7",
								"exec": [
									"pm.test(\"Successfully add PetType\", function () {",
									"    pm.response.to.have.status(201); // created",
									"    postman.setEnvironmentVariable(\"totalPetTypes\", parseInt(environment.totalPetTypes) + 1);",
									"    postman.setEnvironmentVariable(\"mostRecentlyAddedPetTypeId\", pm.response.json().id)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"name\": \"Dog\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/pettypes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pettypes"
							]
						},
						"description": "  As a employee\r\n  I want to add new PetTypen name\r\n  So that we can add new PetType name"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fail to add PetType",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "45798cd6-f1ee-4a80-b281-31aeb533f42d",
								"exec": [
									"pm.test(\"Fail to add PetType\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"name\": \"\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/pettypes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pettypes"
							]
						},
						"description": "   As a employee\r\n   I want to Fail to add new PetType\r\n   So that the new Pet Type will not be displayed at of the Pet Type's list"
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieve by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e283f51f-7827-47c4-93cf-6abe44814c13",
								"exec": [
									"pm.test(\"Can retrieve by pettype id\", function () {\r",
									"pm.expect(pm.response.json().id).to.equal(parseInt(environment.mostRecentlyAddedPetTypeId));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pettypes/:petTypeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pettypes",
								":petTypeId"
							],
							"variable": [
								{
									"key": "petTypeId",
									"value": "{{mostRecentlyAddedPetTypeId}}",
									"description": "(Required) petTypeId"
								}
							]
						},
						"description": "  As a employee\r\n  I want to retrieve by Id of PetType\r\n  So that i can find the pettype by id"
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "updatePetType",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39f9ef9e-7538-4337-9135-89cf63957f78",
								"exec": [
									"pm.test(\"Update petType's name\", function () {",
									"    pm.response.to.have.status(204); // No content",
									"    var url = pm.variables.get('baseUrl') + '/pettypes';",
									"",
									"    pm.sendRequest(url, function (err, res) {",
									"        if (err) {",
									"            console.log(err);",
									"            pm.fail();",
									"        } else {",
									"            var json = res.json();",
									"            var name = json[json.length - 1].name;",
									"            pm.expect(name).to.eql('wibble');",
									"        }",
									"    });",
									"",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"wibble\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/pettypes/:petTypeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pettypes",
								":petTypeId"
							],
							"variable": [
								{
									"key": "petTypeId",
									"value": "{{mostRecentlyAddedPetTypeId}}",
									"description": "(Required) petTypeId"
								}
							]
						},
						"description": "  As a employee\r\n  I want to update PetType\r\n  So that we can  update our PetTypes List"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fail to update PetType",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be15d385-3864-43d1-9fb6-584130aabc59",
								"exec": [
									"pm.test(\"Update petType's name\", function () {",
									"    pm.response.to.have.status(400);",
									"",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/pettypes/:petTypeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pettypes",
								":petTypeId"
							],
							"variable": [
								{
									"key": "petTypeId",
									"value": "{{mostRecentlyAddedPetTypeId}}",
									"description": "(Required) petTypeId"
								}
							]
						},
						"description": "  As a employee\r\n  I want to fail to update PetType name\r\n  So that The updated pet Type name will not be displayed at the end of the Pet type's list"
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "deletePetType",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "12bad3e0-7b37-4926-b9ec-f823c20f4397",
								"exec": [
									"pm.test(\"Delete most recent pettype\", function () {\r",
									"    pm.response.to.have.status(204); // deleted\r",
									"    postman.setEnvironmentVariable(\"totalPetTypes\", parseInt(environment.totalPettype) - 1);\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pettypes/:petTypeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pettypes",
								":petTypeId"
							],
							"variable": [
								{
									"key": "petTypeId",
									"value": "{{mostRecentlyAddedPetTypeId}}",
									"description": "(Required) petTypeId"
								}
							]
						},
						"description": "  As a employee\r\n  I want to delete  PetType name\r\n  So that The specific PetType will be disappear from the end of the Pet Type's list"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fail to delete PetType",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c13419fc-a032-4ca5-bb6e-654608926421",
								"exec": [
									"pm.test(\"Fail to delete non-existant pet\", function () {\r",
									"    pm.response.to.have.status(404); // Not found\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pettypes/:petTypeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pettypes",
								":petTypeId"
							],
							"variable": [
								{
									"key": "petTypeId",
									"value": "314681",
									"description": "(Required) petTypeId"
								}
							]
						},
						"description": "   As a employee\r\n   I want to fail delete  PetType name\r\n   So that The specific PetType will not be disappear from \r\n   the Pet Type's list"
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pettypes/:petTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pettypes",
										":petTypeId"
									],
									"variable": [
										{
											"key": "petTypeId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "  As a employee\r\n  I want to add ,Delete Edit and view  PetType\r\n  So than I can maintain our petType list",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4efd7f69-1ffb-437c-8412-eb252ffb6183",
						"type": "text/javascript",
						"exec": [
							"var url = pm.variables.get('baseUrl') + '/pettypes';",
							"    ",
							"pm.sendRequest(url, function (err, res) {",
							"    if (err) {",
							"        console.log(err);",
							"        pm.fail();",
							"    } else {",
							"        var json = res.json();",
							"    postman.setEnvironmentVariable(\"totalPetTypes\", json.length);",
							"    postman.setEnvironmentVariable(\"mostRecentlyAddedPetTypeId\", json[json.length - 1].id);",
							"    }",
							"});",
							"",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e1269c5a-1972-4085-97ce-864f837510fc",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "ff275093-3645-4db0-93f2-53ba0630284f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "2461de65-c25e-4513-b1df-ef49e185ab68",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "4c2e26c0-01a8-4bb8-a256-0b7baad9504c",
			"key": "baseUrl",
			"value": "http://localhost:8080/petclinic/api",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}